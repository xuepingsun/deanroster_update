# Generated by Django 3.2.25 on 2024-11-23 11:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('roster', '0010_alter_deaninfo_cv_string_url'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeanBasic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_first', models.CharField(max_length=20, verbose_name='姓')),
                ('name_last', models.CharField(max_length=20, verbose_name='名')),
                ('gender', models.CharField(choices=[('female', '女'), ('male', '男')], max_length=6, verbose_name='性别')),
                ('is_name_common', models.CharField(choices=[('1', '是'), ('0', '否')], max_length=20, verbose_name='是否为常见名')),
                ('birth_year_mon', models.CharField(default='0000', max_length=7, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='Only xxxx or xxxx-xx are allowed.', regex='^[0-9]{4}(\\-[0-9]{2}){0,1}$')], verbose_name='出生年月')),
                ('st_year_mon', models.CharField(default='0000', max_length=7, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='Only xxxx or xxxx-xx are allowed.', regex='^[0-9]{4}(\\-[0-9]{2}){0,1}$')], verbose_name='任职开始年月')),
                ('end_year_mon', models.CharField(default='0000', max_length=7, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='Only xxxx or xxxx-xx are allowed.', regex='^[0-9]{4}(\\-[0-9]{2}){0,1}$')], verbose_name='任职结束年月')),
                ('edu_background_url', models.URLField(default='www.baidu.com', max_length=255, verbose_name='教育背景信息的网页链接')),
                ('CV_string_url', models.URLField(default='www.baidu.com', max_length=255, verbose_name='履历信息的网页链接')),
            ],
            options={
                'verbose_name': '院长信息',
                'verbose_name_plural': '院长信息',
            },
        ),
        migrations.CreateModel(
            name='DeanCV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_st_year_mon', models.CharField(default='0000', max_length=7, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='Only xxxx or xxxx-xx are allowed.', regex='^[0-9]{4}(\\-[0-9]{2}){0,1}$')], verbose_name='该职位的开始年份(xxxx)或者年月(xxxx-xx)')),
                ('job_end_year_mon', models.CharField(default='0000', max_length=7, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='Only xxxx or xxxx-xx are allowed.', regex='^[0-9]{4}(\\-[0-9]{2}){0,1}$')], verbose_name='该职位的结束年份(xxxx)或者年月(xxxx-xx)')),
                ('job_title', models.CharField(default='na', max_length=200, verbose_name='该职位的具体名称')),
                ('job_title_level', models.CharField(choices=[('dean', '院长'), ('vice-dean', '副院长'), ('prof', '教授'), ('associate-prof', '副教授'), ('assistant-prof', '助理教授/讲师'), ('postdoc', '博士后'), ('research-associate', '研究员')], default='other', max_length=20, verbose_name='职位级别')),
                ('job_country', models.CharField(default='na', max_length=10, verbose_name='该职位所在地区与国家')),
                ('job_institution', models.CharField(default='na', max_length=200, verbose_name='任职单位(具体到大学-学院或者研究所-实验室)')),
                ('job_location_category', models.CharField(choices=[('within-uni', '本校'), ('within', '本院'), ('china', '国内其他院所'), ('oversea', '海外')], default='other', max_length=10, verbose_name='任职单位类型(不能确定的情况下选择other)')),
            ],
            options={
                'verbose_name': '工作履历',
                'verbose_name_plural': '工作履历',
            },
        ),
        migrations.CreateModel(
            name='Deanedu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edu_degree_year_mon', models.CharField(default='0000', max_length=7, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='Only xxxx or xxxx-xx are allowed.', regex='^[0-9]{4}(\\-[0-9]{2}){0,1}$')], verbose_name='该学位的授予年份(xxxx)或者年月(xxxx-xx)')),
                ('edu_degree', models.CharField(choices=[('phd', '博士'), ('ma', '硕士'), ('ba', '学士')], max_length=10, verbose_name='学位')),
                ('edu_country', models.CharField(default='na', max_length=10, verbose_name='学位授予国家或地区')),
                ('edu_institution', models.CharField(default='na', max_length=100, verbose_name='学位授予机构(具体到大学-学院或者研究所)')),
                ('edu_location_category', models.CharField(choices=[('within-uni', '本校'), ('within', '本院'), ('china', '国内其他院所'), ('oversea', '海外')], default='other', max_length=10, verbose_name='学位授予单位类型(不能确定的情况下选择other)')),
            ],
            options={
                'verbose_name': '高等教育背景',
                'verbose_name_plural': '高等教育背景',
            },
        ),
        migrations.CreateModel(
            name='DeanID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('database', models.CharField(choices=[('scopus', 'scopus'), ('wanfang', 'wanfang')], help_text='自然科学范畴内不应该缺失scopus ID，社会科学范畴内不应该缺失 wanfang；大部分情况下应该二者兼有', max_length=10, verbose_name='学术发表数据库名称')),
                ('auid', models.CharField(default='na', help_text='该院长在此数据库中的学者ID如果有一个以上，请分行填写', max_length=20, verbose_name='学者ID')),
                ('auid_firstyear_in_database', models.CharField(default='0000', max_length=4, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='Only xxxx is allowed.', regex='^[0-9]{4}$')], verbose_name='该院长在此数据库中的第一篇发表时间(包含硕士以上论文)')),
                ('author_profile_url', models.URLField(default='www.baidu.com', max_length=255, verbose_name='该院长在此数据库中的学者页面链接')),
                ('h_index_till_2022', models.IntegerField(default=-99, max_length=20, verbose_name='该院长在此数据库中的截止目前的h-index')),
            ],
            options={
                'verbose_name': '出版数据库ID',
                'verbose_name_plural': '出版数据库ID',
            },
        ),
        migrations.CreateModel(
            name='DepartmentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=60, verbose_name='系/所名称')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university', models.CharField(choices=[('安徽大学', '安徽大学'), ('北京师范大学', '北京师范大学'), ('华中师范大学', '华中师范大学'), ('中南大学', '中南大学'), ('中央财经大学', '中央财经大学'), ('重庆大学', '重庆大学'), ('东华大学', '东华大学'), ('华东师范大学', '华东师范大学'), ('复旦大学', '复旦大学'), ('福州大学', '福州大学'), ('广西大学', '广西大学'), ('贵州大学', '贵州大学'), ('海南大学', '海南大学'), ('哈尔滨工业大学', '哈尔滨工业大学'), ('华中科技大学', '华中科技大学'), ('湖南大学', '湖南大学'), ('内蒙古大学', '内蒙古大学'), ('江南大学', '江南大学'), ('吉林大学', '吉林大学'), ('暨南大学', '暨南大学'), ('兰州大学', '兰州大学'), ('辽宁大学', '辽宁大学'), ('南昌大学', '南昌大学'), ('南京师范大学', '南京师范大学'), ('南京大学', '南京大学'), ('南开大学', '南开大学'), ('宁夏大学', '宁夏大学'), ('东北大学', '东北大学'), ('西北大学', '西北大学'), ('中国海洋大学', '中国海洋大学'), ('北京大学', '北京大学'), ('青海大学', '青海大学'), ('中国人民大学', '中国人民大学'), ('上海交通大学', '上海交通大学'), ('上海大学', '上海大学'), ('上海财经大学', '上海财经大学'), ('上海科技大学', '上海科技大学'), ('山东大学', '山东大学'), ('石河子大学', '石河子大学'), ('四川大学', '四川大学'), ('东南大学', '东南大学'), ('西南财经大学', '西南财经大学'), ('苏州大学', '苏州大学'), ('天津大学', '天津大学'), ('西藏大学', '西藏大学'), ('同济大学', '同济大学'), ('清华大学', '清华大学'), ('对外经济贸易大学', '对外经济贸易大学'), ('中国科学技术大学', '中国科学技术大学'), ('武汉大学', '武汉大学'), ('西安交通大学', '西安交通大学'), ('厦门大学', '厦门大学'), ('新疆大学', '新疆大学'), ('延边大学', '延边大学'), ('云南大学', '云南大学'), ('浙江大学', '浙江大学'), ('郑州大学', '郑州大学'), ('中南财经政法大学', '中南财经政法大学')], default='na', max_length=50, verbose_name='大学名称')),
                ('university_category', models.CharField(choices=[('985', '985'), ('211', '211'), ('none', 'none')], default='na', max_length=7, verbose_name='大学985/211类别')),
                ('school', models.CharField(default='na', max_length=50, verbose_name='学院名称')),
                ('school_en', models.CharField(default='na', max_length=50, verbose_name='学院英文名')),
                ('school_st_year', models.CharField(default='0000', max_length=4, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='Only xxxx are allowed.', regex='^[0-9]{4}$')], verbose_name='学院创始年份')),
                ('school_category', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('life', '生命科学'), ('chem', '化学'), ('phys', '物理'), ('macs', '数学与计算科学'), ('econ', '经济'), ('soci', '社会学'), ('pol', '政府管理与政治学'), ('law', '法学')], max_length=50, verbose_name='学科大类')),
            ],
            options={
                'verbose_name': '院系名单',
                'verbose_name_plural': '院系名单',
            },
        ),
        migrations.CreateModel(
            name='XiInstitute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university', models.CharField(choices=[('安徽大学', '安徽大学'), ('北京师范大学', '北京师范大学'), ('华中师范大学', '华中师范大学'), ('中南大学', '中南大学'), ('中央财经大学', '中央财经大学'), ('重庆大学', '重庆大学'), ('东华大学', '东华大学'), ('华东师范大学', '华东师范大学'), ('复旦大学', '复旦大学'), ('福州大学', '福州大学'), ('广西大学', '广西大学'), ('贵州大学', '贵州大学'), ('海南大学', '海南大学'), ('哈尔滨工业大学', '哈尔滨工业大学'), ('华中科技大学', '华中科技大学'), ('湖南大学', '湖南大学'), ('内蒙古大学', '内蒙古大学'), ('江南大学', '江南大学'), ('吉林大学', '吉林大学'), ('暨南大学', '暨南大学'), ('兰州大学', '兰州大学'), ('辽宁大学', '辽宁大学'), ('南昌大学', '南昌大学'), ('南京师范大学', '南京师范大学'), ('南京大学', '南京大学'), ('南开大学', '南开大学'), ('宁夏大学', '宁夏大学'), ('东北大学', '东北大学'), ('西北大学', '西北大学'), ('中国海洋大学', '中国海洋大学'), ('北京大学', '北京大学'), ('青海大学', '青海大学'), ('中国人民大学', '中国人民大学'), ('上海交通大学', '上海交通大学'), ('上海大学', '上海大学'), ('上海财经大学', '上海财经大学'), ('上海科技大学', '上海科技大学'), ('山东大学', '山东大学'), ('石河子大学', '石河子大学'), ('四川大学', '四川大学'), ('东南大学', '东南大学'), ('西南财经大学', '西南财经大学'), ('苏州大学', '苏州大学'), ('天津大学', '天津大学'), ('西藏大学', '西藏大学'), ('同济大学', '同济大学'), ('清华大学', '清华大学'), ('对外经济贸易大学', '对外经济贸易大学'), ('中国科学技术大学', '中国科学技术大学'), ('武汉大学', '武汉大学'), ('西安交通大学', '西安交通大学'), ('厦门大学', '厦门大学'), ('新疆大学', '新疆大学'), ('延边大学', '延边大学'), ('云南大学', '云南大学'), ('浙江大学', '浙江大学'), ('郑州大学', '郑州大学'), ('中南财经政法大学', '中南财经政法大学')], default='na', max_length=50, verbose_name='大学名称')),
                ('institute_name', models.CharField(max_length=30, verbose_name='机构名称')),
                ('found_year_mon', models.CharField(max_length=30, verbose_name='机构创始年月')),
                ('institute_type', models.CharField(choices=[('center', '中心/研究所'), ('college', '学院')], max_length=8, verbose_name='机构级别')),
            ],
            options={
                'verbose_name': '校级马列学院与习近平思想研究院所',
                'verbose_name_plural': '校级马列学院与习近平思想研究院所',
                'unique_together': {('university', 'institute_name')},
            },
        ),
        migrations.DeleteModel(
            name='DeanInfo',
        ),
        migrations.AddConstraint(
            model_name='schoolinfo',
            constraint=models.UniqueConstraint(fields=('university', 'school'), name='university_school'),
        ),
        migrations.AddField(
            model_name='departmentinfo',
            name='school_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='roster.schoolinfo'),
        ),
        migrations.AddField(
            model_name='deanid',
            name='dean_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='roster.deanbasic'),
        ),
        migrations.AddField(
            model_name='deanedu',
            name='dean_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='roster.deanbasic'),
        ),
        migrations.AddField(
            model_name='deancv',
            name='dean_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='roster.deanbasic'),
        ),
        migrations.AddField(
            model_name='deanbasic',
            name='university_school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='roster.schoolinfo'),
        ),
        migrations.AddConstraint(
            model_name='deanbasic',
            constraint=models.UniqueConstraint(fields=('university_school', 'name_last', 'name_first', 'st_year_mon'), name='university_school_name_st_year_mon'),
        ),
    ]
